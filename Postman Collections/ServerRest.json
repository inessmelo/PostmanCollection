{
	"info": {
		"_postman_id": "b830bc06-e941-4453-9c38-b27ff125e602",
		"name": "ServerRest",
		"description": "READ\n\n**O ServeRest é uma API REST gratuita que simula uma loja virtual com intuito de servir de material de estudos de testes de API.**\n\n**Não deixe de seguir o** [<b>autor do projeto</b>](https://github.com/PauloGoncalvesBH) **e deixar um star no repositório:** [<b>github.com/ServeRest/ServeRest</b>](https://github.com/ServeRest/ServeRest)\n\nEssa página documenta todas as rotas e como acessá-las. Para mais detalhes do ServeRest (como executar localmente utilizando Docker ou NPM, alterar timeout de autenticação, etc) acesse [o repositório do ServeRest](https://github.com/serverest/serverest).\n\nEstá utilizando Postman? Importe o [JSON do Swagger](https://raw.githubusercontent.com/ServeRest/ServeRest/trunk/docs/swagger.json) para ter acesso às collections.\n\nVai fazer teste de carga? Leia a seção '[Teste de Carga](https://github.com/ServeRest/ServeRest#teste-de-carga)'.\n\nMuito obrigado ♥ a todos que apoiam o projeto [financeiramente](https://opencollective.com/serverest#section-contributors) ou [com código, ideias e divulgação](https://github.com/ServeRest/ServeRest#contribuidores-), graças a vocês **mais de R$ 2000,00 foram doados para a ONG** [<b>Todas as letras</b>](https://todasasletras.org/) até o momento.\n\nO ServeRest possui um front, com status em beta, não deixe de conhecer: [front.serverest.dev](https://front.serverest.dev/).\n\nPrecisa de apoio? [Abra uma issue](https://github.com/ServeRest/ServeRest/issues) ou contate o mantenedor do projeto:\n\n[Paulo Gonçalves&nbsp;- Website](https://www.linkedin.com/in/paulo-goncalves/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "[CT001]Validar acesso invalido",
					"id": "1682b48f-5e40-4d42-8b4d-bec55fae590b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"teste@qa.com\",\r\n  \"password\": \"abc123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://serverest.dev/login"
					},
					"response": []
				},
				{
					"name": "[CT002]]Validar email valido",
					"id": "11c56e4b-af3f-4535-98e2-110e654dfc6e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": []
					},
					"response": []
				}
			],
			"id": "78ea72f6-7ea6-413b-82ff-a2a403facfa3",
			"description": "Autentique o seu usuário para montar um carrinho e, se for administrador, gerenciar os produtosEndFragment\n\nStartFragment\n\nInforme o valor de `Authorization` retornado na rota _/login_\n\nName: `Authorization`\n\nIn: `header`\n\nEndFragment",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d5773b47-49ee-4379-8e98-60fc935c92c9",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e1084175-6ad6-4970-b3b0-b62ff820883f",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": {
			"value": "Authorization",
			"key": "Authorization"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "c1205adb-548f-4610-be18-43dc8212cde9",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "6e8db0b7-83e1-4a20-b91e-5473a1f8e4c4",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Name",
			"value": "Authorization",
			"type": "string"
		}
	]
}