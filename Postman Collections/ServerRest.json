{
	"info": {
		"_postman_id": "b830bc06-e941-4453-9c38-b27ff125e602",
		"name": "ServerRest",
		"description": "READ\n\n**O ServeRest é uma API REST gratuita que simula uma loja virtual com intuito de servir de material de estudos de testes de API.**\n\n**Não deixe de seguir o** [<b>autor do projeto</b>](https://github.com/PauloGoncalvesBH) **e deixar um star no repositório:** [<b>github.com/ServeRest/ServeRest</b>](https://github.com/ServeRest/ServeRest)\n\nEssa página documenta todas as rotas e como acessá-las. Para mais detalhes do ServeRest (como executar localmente utilizando Docker ou NPM, alterar timeout de autenticação, etc) acesse [o repositório do ServeRest](https://github.com/serverest/serverest).\n\nEstá utilizando Postman? Importe o [JSON do Swagger](https://raw.githubusercontent.com/ServeRest/ServeRest/trunk/docs/swagger.json) para ter acesso às collections.\n\nVai fazer teste de carga? Leia a seção '[Teste de Carga](https://github.com/ServeRest/ServeRest#teste-de-carga)'.\n\nMuito obrigado ♥ a todos que apoiam o projeto [financeiramente](https://opencollective.com/serverest#section-contributors) ou [com código, ideias e divulgação](https://github.com/ServeRest/ServeRest#contribuidores-), graças a vocês **mais de R$ 2000,00 foram doados para a ONG** [<b>Todas as letras</b>](https://todasasletras.org/) até o momento.\n\nO ServeRest possui um front, com status em beta, não deixe de conhecer: [front.serverest.dev](https://front.serverest.dev/).\n\nPrecisa de apoio? [Abra uma issue](https://github.com/ServeRest/ServeRest/issues) ou contate o mantenedor do projeto:\n\n[Paulo Gonçalves&nbsp;- Website](https://www.linkedin.com/in/paulo-goncalves/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "[CT001]Validar dados invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "21e3bcc3-0c26-4635-a37f-40dbe3f2c79f",
								"exec": [
									"//RETORNO DO CODIGO E O STATUS\r",
									"pm.test(\"Status code retorna 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"    pm.response.to.have.status(\"Unauthorized\");\r",
									"});\r",
									"\r",
									"//RETORNO DO RESPONSE\r",
									"pm.test(\"Exibe a msg de alerta\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Email e/ou senha inválidos\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "1682b48f-5e40-4d42-8b4d-bec55fae590b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Authorization ",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"teste@qa.com\",\r\n    \"password\": \"abc123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL_ServerRest}}/login"
					},
					"response": []
				},
				{
					"name": "[CT002]]Validar campos em branco",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed2063fa-c5b7-4393-a541-9323221ca1f5",
								"exec": [
									"//RETORNO DO CODIGO E O STATUS\r",
									"pm.test(\"Retorna o Status Code 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									"//RETORNO DO RESPONSE\r",
									"pm.test(\"Exibe a msg de alerta\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"email não pode ficar em branco\");\r",
									"    pm.expect(pm.response.text()).to.include(\"password não pode ficar em branco\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "11c56e4b-af3f-4535-98e2-110e654dfc6e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Nome",
								"value": "Authorization ",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL_ServerRest}}/login"
					},
					"response": []
				},
				{
					"name": "[CT003]]Validar obrigatoriedade do campo email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45eb0795-951e-4091-b6a6-34246b1389cb",
								"exec": [
									"//RETORNO DO CODIGO E O STATUS\r",
									"pm.test(\"Retorna o Status Code 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									"//RETORNO DO RESPONSE\r",
									"pm.test(\"Exibe a msg de alerta\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"email não pode ficar em branco\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "f82b7be8-1417-431c-8bb1-e6e343054cb2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Nome",
								"value": "Authorization ",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"1234567\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL_ServerRest}}/login"
					},
					"response": []
				},
				{
					"name": "[CT004]]Validar obrigatoriedade do campo password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed2063fa-c5b7-4393-a541-9323221ca1f5",
								"exec": [
									"//RETORNO DO CODIGO E O STATUS\r",
									"pm.test(\"Retorna o Status Code 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									"//RETORNO DO RESPONSE\r",
									"pm.test(\"Exibe a msg de alerta\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"password não pode ficar em branco\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "0d29c022-c3c9-4f97-8994-bae9bde8dc6f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Nome",
								"value": "Authorization ",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"teste@teste.com\",\r\n    \"password\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL_ServerRest}}/login"
					},
					"response": []
				},
				{
					"name": "[CT005]]Validar email invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed2063fa-c5b7-4393-a541-9323221ca1f5",
								"exec": [
									"//RETORNO DO CODIGO E O STATUS\r",
									"pm.test(\"Retorna o Status Code 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									"//RETORNO DO RESPONSE\r",
									"pm.test(\"Exibe a msg de alerta\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"email deve ser um email válido\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "9b66d7b6-304e-4478-833a-86ef8c3167aa",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Nome",
								"value": "Authorization ",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"teste#qa.com\",\r\n    \"password\": \"abc123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL_ServerRest}}/login"
					},
					"response": []
				},
				{
					"name": "[CT006]]Validar password invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed2063fa-c5b7-4393-a541-9323221ca1f5",
								"exec": [
									"//RETORNO DO CODIGO E O STATUS\r",
									"pm.test(\"Retorna o Status Code 401 Unauthorized\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"    pm.response.to.have.status(\"Unauthorized\");\r",
									"});\r",
									"\r",
									"//RETORNO DO RESPONSE\r",
									"pm.test(\"Exibe a msg de alerta\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Email e/ou senha inválidos\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "85c1ddf6-394d-4817-93e9-6861aae4b368",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Nome",
								"value": "Authorization",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"teste@qa.com\",\r\n    \"password\": \"a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_ServerRest}}/login",
							"host": [
								"{{URL_ServerRest}}"
							],
							"path": [
								"login"
							],
							"query": [
								{
									"key": "name",
									"value": "Authorization ",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "[CT007]]Validar login Admin com sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed2063fa-c5b7-4393-a541-9323221ca1f5",
								"exec": [
									"let response = pm.response.json();\r",
									"let token_Admin = response.authorization;\r",
									"pm.globals.set(\"token_adm\", token_adm);\r",
									"\r",
									"//RETORNO DO CODIGO E O STATUS\r",
									"pm.test(\"Retorna o Status Code 200 Bad Request\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"//RETORNO DO RESPONSE\r",
									"pm.test(\"Exibe a msg de alerta\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Login realizado com sucesso\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "63753d94-9c19-4adc-9a11-3b20ca5b5cbd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "name",
								"value": "Authorization",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"teste@qa01.com\",\r\n    \"password\": \"testeqa1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_ServerRest}}/login?Name=Authorization ",
							"host": [
								"{{URL_ServerRest}}"
							],
							"path": [
								"login"
							],
							"query": [
								{
									"key": "Name",
									"value": "Authorization "
								},
								{
									"key": "In",
									"value": "header",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "[CT008]]Validar login nok Admin com sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed2063fa-c5b7-4393-a541-9323221ca1f5",
								"exec": [
									"//RETORNO DO CODIGO E O STATUS\r",
									"pm.test(\"Retorna o Status Code 200 Bad Request\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"//RETORNO DO RESPONSE\r",
									"pm.test(\"Exibe a msg de alerta\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Login realizado com sucesso\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "f38bf3e8-38b3-48c7-9b2d-fbe6a9767308",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "name",
								"value": "Authorization",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"naoadmin@teste.com\",\r\n    \"password\": \"naoadmin@123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_ServerRest}}/login?Name=Authorization ",
							"host": [
								"{{URL_ServerRest}}"
							],
							"path": [
								"login"
							],
							"query": [
								{
									"key": "Name",
									"value": "Authorization "
								},
								{
									"key": "In",
									"value": "header",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "78ea72f6-7ea6-413b-82ff-a2a403facfa3",
			"description": "Autentique o seu usuário para montar um carrinho e, se for administrador, gerenciar os produtosEndFragment\n\nLogin com sucesso\n\n\\--> Para efetuar o login com sucesso, deverá efetuar o cadstro de um usuário e em seguida efetuar o login com os dados necessários no body\n\nInforme o valor de `Authorization` retornado na rota _/login_\n\nName: `Authorization`\n\nIn: `header`\n\nEndFragment",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "34f6cc86-381f-4553-b5ee-2765e5bb4dad",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e1a8dbd2-268c-4503-b0b1-1cda34e153d8",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Usuários",
			"item": [
				{
					"name": "Buscar",
					"item": [
						{
							"name": "[CT001]Buscar usuário por ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9ee994e-15db-4ed0-a3df-c2b5e9ce97a3",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"4alroLhKVkNX177y\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "94642a8d-6449-4ea0-8064-42fa8c004e3a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL_ServerRest}}/usuarios?_id=4alroLhKVkNX177y",
									"host": [
										"{{URL_ServerRest}}"
									],
									"path": [
										"usuarios"
									],
									"query": [
										{
											"key": "_id",
											"value": "4alroLhKVkNX177y",
											"type": "text"
										},
										{
											"key": "nome",
											"value": "Teste QA001",
											"disabled": true
										},
										{
											"key": "email",
											"value": "teste@qa01.com",
											"disabled": true
										},
										{
											"key": "password",
											"value": "testeqa1234",
											"type": "text",
											"disabled": true
										},
										{
											"key": "administrador",
											"value": "true",
											"type": "text",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT002]Buscar usuário por email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9ee994e-15db-4ed0-a3df-c2b5e9ce97a3",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"teste@qa01.com\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "56584621-71ba-46b1-8430-634502d5128b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL_ServerRest}}/usuarios?email=teste@qa01.com",
									"host": [
										"{{URL_ServerRest}}"
									],
									"path": [
										"usuarios"
									],
									"query": [
										{
											"key": "_id",
											"value": "4alroLhKVkNX177y",
											"type": "text",
											"disabled": true
										},
										{
											"key": "nome",
											"value": "Teste QA001",
											"type": "text",
											"disabled": true
										},
										{
											"key": "email",
											"value": "teste@qa01.com"
										},
										{
											"key": "password",
											"value": "testeqa1234",
											"type": "text",
											"disabled": true
										},
										{
											"key": "administrador",
											"value": "true",
											"type": "text",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT003]Buscar usuário por nome",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9ee994e-15db-4ed0-a3df-c2b5e9ce97a3",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Teste QA001\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "6151c295-2785-4d8b-b761-82466ad5e20a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL_ServerRest}}/usuarios?nome=Teste QA001",
									"host": [
										"{{URL_ServerRest}}"
									],
									"path": [
										"usuarios"
									],
									"query": [
										{
											"key": "_id",
											"value": "4alroLhKVkNX177y",
											"type": "text",
											"disabled": true
										},
										{
											"key": "nome",
											"value": "Teste QA001",
											"type": "text"
										},
										{
											"key": "email",
											"value": "teste@qa01.com",
											"disabled": true
										},
										{
											"key": "password",
											"value": "testeqa1234",
											"type": "text",
											"disabled": true
										},
										{
											"key": "administrador",
											"value": "true",
											"type": "text",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT004]Buscar usuário por senha",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9ee994e-15db-4ed0-a3df-c2b5e9ce97a3",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"testeqa1234\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1966421f-e5d3-4f0f-b6b9-5d2c181082f6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL_ServerRest}}/usuarios?password=testeqa1234",
									"host": [
										"{{URL_ServerRest}}"
									],
									"path": [
										"usuarios"
									],
									"query": [
										{
											"key": "_id",
											"value": "4alroLhKVkNX177y",
											"type": "text",
											"disabled": true
										},
										{
											"key": "nome",
											"value": "Teste QA001",
											"disabled": true
										},
										{
											"key": "email",
											"value": "teste@qa01.com",
											"disabled": true
										},
										{
											"key": "password",
											"value": "testeqa1234",
											"type": "text"
										},
										{
											"key": "administrador",
											"value": "true",
											"type": "text",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT005]Buscar usuário por adminitrador",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9ee994e-15db-4ed0-a3df-c2b5e9ce97a3",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"true\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "e69fb293-f683-4f3c-b2be-b3980be7993a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL_ServerRest}}/usuarios?administrador=true",
									"host": [
										"{{URL_ServerRest}}"
									],
									"path": [
										"usuarios"
									],
									"query": [
										{
											"key": "_id",
											"value": "4alroLhKVkNX177y",
											"type": "text",
											"disabled": true
										},
										{
											"key": "nome",
											"value": "Teste QA001",
											"disabled": true
										},
										{
											"key": "email",
											"value": "teste@qa01.com",
											"disabled": true
										},
										{
											"key": "password",
											"value": "testeqa1234",
											"disabled": true
										},
										{
											"key": "administrador",
											"value": "true",
											"type": "text"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT006]Buscar usuário com ID invalido",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f71bc18a-aa9a-4a27-9375-d17795153c67",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"0\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "0e776e20-ffac-483d-b936-13501b52f9a0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL_ServerRest}}/usuarios?_id=AAAaaaaa",
									"host": [
										"{{URL_ServerRest}}"
									],
									"path": [
										"usuarios"
									],
									"query": [
										{
											"key": "_id",
											"value": "AAAaaaaa"
										},
										{
											"key": "nome",
											"value": "Teste QA001",
											"disabled": true
										},
										{
											"key": "email",
											"value": "teste@qa01.com",
											"disabled": true
										},
										{
											"key": "password",
											"value": "testeqa1234",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT007]Buscar usuário com nome invalido",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f71bc18a-aa9a-4a27-9375-d17795153c67",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"0\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "2780f0dc-2d2e-4194-9c71-0af41fe71760",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL_ServerRest}}/usuarios?nome=AAAaaaaa",
									"host": [
										"{{URL_ServerRest}}"
									],
									"path": [
										"usuarios"
									],
									"query": [
										{
											"key": "_id",
											"value": "AAAaaaaa",
											"disabled": true
										},
										{
											"key": "nome",
											"value": "AAAaaaaa"
										},
										{
											"key": "email",
											"value": "AAAaaaaa@qa01.com",
											"disabled": true
										},
										{
											"key": "password",
											"value": "AAAaaaaa",
											"disabled": true
										},
										{
											"key": "administrador",
											"value": "AAAaaaaa",
											"type": "text",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT008]Buscar usuário com email invalido",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f71bc18a-aa9a-4a27-9375-d17795153c67",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"0\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "4ce8c193-cc03-4896-ba40-0d4d54db1dc6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL_ServerRest}}/usuarios?email=AAAaaaaa@qa01.com",
									"host": [
										"{{URL_ServerRest}}"
									],
									"path": [
										"usuarios"
									],
									"query": [
										{
											"key": "_id",
											"value": "AAAaaaaa",
											"disabled": true
										},
										{
											"key": "nome",
											"value": "AAAaaaaa",
											"disabled": true
										},
										{
											"key": "email",
											"value": "AAAaaaaa@qa01.com"
										},
										{
											"key": "password",
											"value": "AAAaaaaa",
											"disabled": true
										},
										{
											"key": "administrador",
											"value": "AAAaaaaa",
											"type": "text",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT009]Buscar usuário com password invalido",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f71bc18a-aa9a-4a27-9375-d17795153c67",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"0\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "621a7408-7ba9-4d9e-8307-5c4290fdc48e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL_ServerRest}}/usuarios?password=AAAaaaaa",
									"host": [
										"{{URL_ServerRest}}"
									],
									"path": [
										"usuarios"
									],
									"query": [
										{
											"key": "_id",
											"value": "AAAaaaaa",
											"disabled": true
										},
										{
											"key": "nome",
											"value": "AAAaaaaa",
											"disabled": true
										},
										{
											"key": "email",
											"value": "AAAaaaaa@qa01.com",
											"disabled": true
										},
										{
											"key": "password",
											"value": "AAAaaaaa"
										},
										{
											"key": "administrador",
											"value": "AAAaaaaa",
											"type": "text",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT010]Buscar usuário com administrador invalido",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f71bc18a-aa9a-4a27-9375-d17795153c67",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"administrador deve ser 'true' ou 'false'\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "dbd94b56-317c-4150-be38-c08f88bc6fa2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_ServerRest}}/usuarios?administrador=AAAaaaaa",
									"host": [
										"{{URL_ServerRest}}"
									],
									"path": [
										"usuarios"
									],
									"query": [
										{
											"key": "_id",
											"value": "AAAaaaaa",
											"disabled": true
										},
										{
											"key": "nome",
											"value": "AAAaaaaa",
											"disabled": true
										},
										{
											"key": "email",
											"value": "AAAaaaaa@qa01.com",
											"disabled": true
										},
										{
											"key": "password",
											"value": "AAAaaaaa",
											"disabled": true
										},
										{
											"key": "administrador",
											"value": "AAAaaaaa"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT011]Buscar usuário pra exclusao",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9ee994e-15db-4ed0-a3df-c2b5e9ce97a3",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"{{delete_id}}\");\r",
											"    pm.expect(pm.response.text()).to.include(\"true\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ee24fa95-723d-4da6-b389-93228128c5a4",
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "a9946bc3-f529-4949-aa68-496fa2b4be95",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL_ServerRest}}/usuarios/{{delete_id}}",
									"host": [
										"{{URL_ServerRest}}"
									],
									"path": [
										"usuarios",
										"{{delete_id}}"
									],
									"query": [
										{
											"key": "_id",
											"value": "MgEI4h08vIsLtlkv",
											"disabled": true
										},
										{
											"key": "nome",
											"value": "Teste exclusão",
											"disabled": true
										},
										{
											"key": "password",
											"value": "excluir@1234",
											"type": "text",
											"disabled": true
										},
										{
											"key": "administrador",
											"value": "true",
											"type": "text",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT012]Buscar usuário para edição",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9ee994e-15db-4ed0-a3df-c2b5e9ce97a3",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"{{edit_id}}\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ee24fa95-723d-4da6-b389-93228128c5a4",
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "b7a9e30e-ec03-4ad4-a00f-44270cec8b16",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_ServerRest}}/usuarios/{{edit_id}}",
									"host": [
										"{{URL_ServerRest}}"
									],
									"path": [
										"usuarios",
										"{{edit_id}}"
									],
									"query": [
										{
											"key": "_id",
											"value": "MgEI4h08vIsLtlkv",
											"disabled": true
										},
										{
											"key": "nome",
											"value": "Teste exclusão",
											"disabled": true
										},
										{
											"key": "password",
											"value": "excluir@1234",
											"type": "text",
											"disabled": true
										},
										{
											"key": "administrador",
											"value": "true",
											"type": "text",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT013]Buscar usuário Admin de teste",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9ee994e-15db-4ed0-a3df-c2b5e9ce97a3",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"{{edit_id}}\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ee24fa95-723d-4da6-b389-93228128c5a4",
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "e075bf8b-455d-406c-aa9e-e7c8d369bd7a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": "{{URL_ServerRest}}/usuarios/{{edit_id}}"
							},
							"response": []
						}
					],
					"id": "dd2ccb6d-1cf2-45f4-a80c-939773ea9c94"
				},
				{
					"name": "Cadastrar",
					"item": [
						{
							"name": "[CT001]Validar campos em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c1d3283-8612-442d-a796-f24d61e3e9b8",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"nome não pode ficar em branco\");\r",
											"    pm.expect(pm.response.text()).to.include(\"email não pode ficar em branco\");\r",
											"    pm.expect(pm.response.text()).to.include(\"password não pode ficar em branco\");\r",
											"    pm.expect(pm.response.text()).to.include(\"administrador deve ser 'true' ou 'false'\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "28c1f3f3-741d-4662-b660-eea62b598c30",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"\",\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"administrador\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios"
							},
							"response": []
						},
						{
							"name": "[CT002]Validar obrigatoriedade do campo nome",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c1d3283-8612-442d-a796-f24d61e3e9b8",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"nome não pode ficar em branco\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "54a3b328-dcca-4667-8726-7cb0c5c866f5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{senha}}\",\r\n    \"administrador\": \"false\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios"
							},
							"response": []
						},
						{
							"name": "[CT003]Validar obrigatoriedade do campo email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c1d3283-8612-442d-a796-f24d61e3e9b8",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"email não pode ficar em branco\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "c5fb0d39-da60-44ac-b378-eb2b0d2b8cea",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"{{name}}\",\r\n    \"email\": \"\",\r\n    \"password\": \"{{senha}}\",\r\n    \"administrador\": \"false\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios"
							},
							"response": []
						},
						{
							"name": "[CT004]Validar obrigatoriedade do campo password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c1d3283-8612-442d-a796-f24d61e3e9b8",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"password não pode ficar em branco\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "90f8c718-2f5c-4cce-a7e0-326876cf975c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"\",\r\n    \"administrador\": \"false\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios"
							},
							"response": []
						},
						{
							"name": "[CT005]Validar obrigatoriedade do campo administrador",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c1d3283-8612-442d-a796-f24d61e3e9b8",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"administrador deve ser 'true' ou 'false'\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "ee1acf2a-733a-411e-8386-5cb43b6ddfcd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{senha}}\",\r\n    \"administrador\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios"
							},
							"response": []
						},
						{
							"name": "[CT006]Validar email invalido",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c1d3283-8612-442d-a796-f24d61e3e9b8",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"email deve ser um email válido\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "ebab3748-f412-4a0f-b5e8-53ba4e5916ff",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"{{nome}}\",\r\n    \"email\": \"teste###qa.com\",\r\n    \"password\": \"{{senha}}\",\r\n    \"administrador\": \"false\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios"
							},
							"response": []
						},
						{
							"name": "[CT007]Validar email ja cadastrado",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c1d3283-8612-442d-a796-f24d61e3e9b8",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Este email já está sendo usado\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "3f35a3dd-6fba-4a30-bed0-1f781dbd3c6b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"{{nome}}\",\r\n    \"email\": \"email@usado.com\",\r\n    \"password\": \"{{senha}}\",\r\n    \"administrador\": \"false\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios"
							},
							"response": []
						},
						{
							"name": "[CT008]Validar administrador invalido",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c1d3283-8612-442d-a796-f24d61e3e9b8",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"administrador deve ser 'true' ou 'false'\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "7f2a1193-6442-4547-a2ac-0a52b8a4b646",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"{{nome}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{senha}}\",\r\n    \"administrador\": \"algo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios"
							},
							"response": []
						},
						{
							"name": "[CT009]Validar cadastro de usuário como Admin com sucesso",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c1d3283-8612-442d-a796-f24d61e3e9b8",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
											"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "98bad921-679b-4196-af49-a641001726a9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{senha}}\",\r\n    \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios"
							},
							"response": []
						},
						{
							"name": "[CT010]Validar cadastro de usuário sem Admin com sucesso",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c1d3283-8612-442d-a796-f24d61e3e9b8",
										"exec": [
											"let response = pm.response.json();\r",
											"let id = response._id;\r",
											"pm.globals.set(\"nok_admin_id\", id);\r",
											"\r",
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
											"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1100aa52-a3d4-42ff-9841-a294291cf9b2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Teste não Admin\",\r\n    \"email\": \"naoadmin@teste.com\",\r\n    \"password\": \"naoadmin@123\",\r\n    \"administrador\": \"false\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios"
							},
							"response": []
						},
						{
							"name": "[CT011]Validar cadastro de usuário para logar",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c1d3283-8612-442d-a796-f24d61e3e9b8",
										"exec": [
											"let response = pm.response.json();\r",
											"let id = response._id;\r",
											"pm.globals.set(\"login_id\", id);\r",
											"\r",
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
											"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "a5aa5f74-6948-4a44-8a0c-fc4afd1c0c93",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Teste QA001\",\r\n    \"email\": \"teste@qa01.com\",\r\n    \"password\": \"testeqa1234\",\r\n    \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios"
							},
							"response": []
						},
						{
							"name": "[CT012]Validar cadastro de usuário",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c1d3283-8612-442d-a796-f24d61e3e9b8",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
											"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7bd65298-a1cc-48b3-8c29-0f7e19f3bdc7",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "b60a9c1c-dd2f-4df5-a4ec-073b131cd107",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Teste exclusão\",\r\n    \"email\": \"excluir@teste.com.br\",\r\n    \"password\": \"excluir@1234\",\r\n    \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios"
							},
							"response": []
						},
						{
							"name": "[CT013]Validar cadastro de usuário para exclusão",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c1d3283-8612-442d-a796-f24d61e3e9b8",
										"exec": [
											"let response = pm.response.json();\r",
											"let id = response._id;\r",
											"pm.globals.set(\"delete_id\", id);\r",
											"\r",
											"pm.test(\"Validar cadastro com sucesso\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7bd65298-a1cc-48b3-8c29-0f7e19f3bdc7",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "31c094d8-2501-4011-9d11-9965af08ca9c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{senha_gerada}}\",\r\n    \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios"
							},
							"response": []
						},
						{
							"name": "[CT014]Validar cadastro de usuário para edição",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c1d3283-8612-442d-a796-f24d61e3e9b8",
										"exec": [
											"let response = pm.response.json();\r",
											"let id = response._id;\r",
											"pm.globals.set(\"edit_id\", id);\r",
											"\r",
											"pm.test(\"Validar cadastro com sucesso\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7bd65298-a1cc-48b3-8c29-0f7e19f3bdc7",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "d00bc1f8-2748-4eba-a67b-de4346fa6119",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{senha_gerada}}\",\r\n    \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios"
							},
							"response": []
						}
					],
					"id": "2544e1af-abb0-48d2-98dd-e0fd1757aa2d"
				},
				{
					"name": "Editar",
					"item": [
						{
							"name": "[CT001]Editar nome com sucesso",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e0c5817d-46ae-4546-8f7b-5c1e0437fa73",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Registro alterado com sucesso\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "57da889a-b0ff-475b-9dfc-5c83e44df08a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"{{$randomFullName}}\",\r\n    \"email\": \"editar@teste.com.br\",\r\n    \"password\": \"editar@1234\",\r\n    \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios/{{edit_id}}"
							},
							"response": []
						},
						{
							"name": "[CT002]Editar email com sucesso",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e0c5817d-46ae-4546-8f7b-5c1e0437fa73",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Registro alterado com sucesso\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "48cea338-7a26-4e08-bb8f-14c0d6043831",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Teste Editar\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"editar@1234\",\r\n    \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios/{{edit_id}}"
							},
							"response": []
						},
						{
							"name": "[CT003]Editar senha com sucesso",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e0c5817d-46ae-4546-8f7b-5c1e0437fa73",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Registro alterado com sucesso\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "879ede84-67f6-4088-829d-5159f33a9920",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Teste Editar\",\r\n    \"email\": \"editar@teste.com.br\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios/{{edit_id}}"
							},
							"response": []
						},
						{
							"name": "[CT004]Editar status Adim pra false",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e0c5817d-46ae-4546-8f7b-5c1e0437fa73",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Registro alterado com sucesso\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "100be7ef-663a-4d7a-9f9e-caacd9f1db76",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Teste Editar\",\r\n    \"email\": \"editar@teste.com.br\",\r\n    \"password\": \"editar@123\",\r\n    \"administrador\": \"false\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios/{{edit_id}}"
							},
							"response": []
						},
						{
							"name": "[CT005]Editar status Adim pra true",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e0c5817d-46ae-4546-8f7b-5c1e0437fa73",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Registro alterado com sucesso\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "bff8c98e-2662-47d3-9662-f6bf6c12a646",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Teste Editar\",\r\n    \"email\": \"editar@teste.com.br\",\r\n    \"password\": \"editar@123\",\r\n    \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios/{{edit_id}}"
							},
							"response": []
						},
						{
							"name": "[CT006]Editar todos os campos",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e0c5817d-46ae-4546-8f7b-5c1e0437fa73",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Registro alterado com sucesso\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "6d02ac50-9a8a-4d79-bba7-250c498aaf8a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{senha_gerada}}\",\r\n    \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios/{{edit_id}}"
							},
							"response": []
						},
						{
							"name": "[CT007]Editar usuário não encontrado",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e0c5817d-46ae-4546-8f7b-5c1e0437fa73",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "14d0b831-227e-4df4-b6ce-4caecdc99051",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{senha_gerada}}\",\r\n    \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios/naoendocntrado@111"
							},
							"response": []
						}
					],
					"id": "4c817c46-abe1-4312-85b7-4f9db9796733"
				},
				{
					"name": "Excluir",
					"item": [
						{
							"name": "[CT001]Excluir usuário nao existente por ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9ee994e-15db-4ed0-a3df-c2b5e9ce97a3",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 405\", function () {\r",
											"    pm.response.to.have.status(405);\r",
											"    pm.response.to.have.status(\"Method Not Allowed\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Não é possível realizar DELETE em /usuarios?_id=MgEI4h08vIsLtlkv. Acesse https://serverest.dev para ver as rotas disponíveis e como utilizá-las.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "aff3a37f-78cd-4ec0-8742-1a4df83ab2fe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_ServerRest}}/usuarios?_id=MgEI4h08vIsLtlkv",
									"host": [
										"{{URL_ServerRest}}"
									],
									"path": [
										"usuarios"
									],
									"query": [
										{
											"key": "_id",
											"value": "MgEI4h08vIsLtlkv"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT002]Excluir usuário Nome",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9ee994e-15db-4ed0-a3df-c2b5e9ce97a3",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 405\", function () {\r",
											"    pm.response.to.have.status(405);\r",
											"    pm.response.to.have.status(\"Method Not Allowed\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Não é possível realizar DELETE em /usuarios?nome=Teste%20exclus%C3%A3o. Acesse https://serverest.dev para ver as rotas disponíveis e como utilizá-las.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "68425752-1979-4ab0-9267-d4a960ff39a6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_ServerRest}}/usuarios?nome=Teste exclusão",
									"host": [
										"{{URL_ServerRest}}"
									],
									"path": [
										"usuarios"
									],
									"query": [
										{
											"key": "nome",
											"value": "Teste exclusão"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT003]Excluir usuário por Função Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9ee994e-15db-4ed0-a3df-c2b5e9ce97a3",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 405\", function () {\r",
											"    pm.response.to.have.status(405);\r",
											"    pm.response.to.have.status(\"Method Not Allowed\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Não é possível realizar DELETE em /usuarios?administrador=true. Acesse https://serverest.dev para ver as rotas disponíveis e como utilizá-las.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "a5456c86-fac0-4263-bebc-8c09981bb92a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_ServerRest}}/usuarios?administrador=true",
									"host": [
										"{{URL_ServerRest}}"
									],
									"path": [
										"usuarios"
									],
									"query": [
										{
											"key": "administrador",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT004]Excluir usuário por senha",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9ee994e-15db-4ed0-a3df-c2b5e9ce97a3",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 405\", function () {\r",
											"    pm.response.to.have.status(405);\r",
											"    pm.response.to.have.status(\"Method Not Allowed\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Não é possível realizar DELETE em /usuarios?password=testeqa1234. Acesse https://serverest.dev para ver as rotas disponíveis e como utilizá-las.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "d12dfc06-873e-4935-aefa-f71e43e84e3b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_ServerRest}}/usuarios?password=excluir@1234",
									"host": [
										"{{URL_ServerRest}}"
									],
									"path": [
										"usuarios"
									],
									"query": [
										{
											"key": "password",
											"value": "excluir@1234"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT005]Excluir usuário por email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9ee994e-15db-4ed0-a3df-c2b5e9ce97a3",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 405\", function () {\r",
											"    pm.response.to.have.status(405);\r",
											"    pm.response.to.have.status(\"Method Not Allowed\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Não é possível realizar DELETE em /usuarios?email=excluir@teste.com.br. Acesse https://serverest.dev para ver as rotas disponíveis e como utilizá-las.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "d50ae8a7-c711-42ba-9dfc-e7817947a0dd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_ServerRest}}/usuarios?email=excluir@teste.com.br",
									"host": [
										"{{URL_ServerRest}}"
									],
									"path": [
										"usuarios"
									],
									"query": [
										{
											"key": "email",
											"value": "excluir@teste.com.br"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT006]Excluir usuário existente por ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9ee994e-15db-4ed0-a3df-c2b5e9ce97a3",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "dc8f5cf8-b513-4ac2-bafd-dea10adff1d3",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "bdbc8f22-c1c4-47a4-91bc-69dc6caffd32",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios/{{delete_id}}"
							},
							"response": []
						},
						{
							"name": "[CT007]Excluir usuário nao encontrado",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9ee994e-15db-4ed0-a3df-c2b5e9ce97a3",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Nenhum registro excluído\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "dc8f5cf8-b513-4ac2-bafd-dea10adff1d3",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "d3d27f4c-1825-4c1b-aa4a-51b2d2224cda",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios/{{registro_id}}"
							},
							"response": []
						},
						{
							"name": "[CT008]Excluir usuário com dados no carrinho",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9ee994e-15db-4ed0-a3df-c2b5e9ce97a3",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Não é permitido excluir usuário com carrinho cadastrado\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "dc8f5cf8-b513-4ac2-bafd-dea10adff1d3",
										"exec": [
											"pm.environment.set(\"{{registro_id}}\", \"{{id}}\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "b6be1bde-7905-4084-8ee9-03dbc88a63c1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/usuarios/{{id}}"
							},
							"response": []
						}
					],
					"id": "38c92192-adb4-49a7-9777-02eb251ea614"
				}
			],
			"id": "a96d30f0-3826-4938-832a-a51539f23833"
		},
		{
			"name": "Produtos",
			"item": [
				{
					"name": "Cadastrar",
					"item": [
						{
							"name": "[CT001]Validar token de acesso ausente",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3b675d4-bcc6-4c32-a01d-225d310ddcd1",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "08e8fec2-a830-463c-9a28-a51195b24923",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"\",\r\n    \"preco\": \"\",\r\n    \"descricao\": \"\",\r\n    \"quantidade\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/produtos"
							},
							"response": []
						},
						{
							"name": "[CT002]Validar cadastro com usuário não Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3b675d4-bcc6-4c32-a01d-225d310ddcd1",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Rota exclusiva para administradores\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "ba008a19-c5f0-4c50-9be7-e94cfe131fd3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5hb2FkbWluQHRlc3RlLmNvbSIsInBhc3N3b3JkIjoibmFvYWRtaW5AMTIzIiwiaWF0IjoxNzU2NTk1NjI5LCJleHAiOjE3NTY1OTYyMjl9.nwcM_4ijBFtOrhEJHmM-v2HPxLilFYQxLTjNP7aYWgM"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"{{$randomProductName}}\",\r\n    \"preco\": {{$randomPrice}},\r\n    \"descricao\": \"{{$randomProduct}}\",\r\n    \"quantidade\": \"{{qde}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/produtos"
							},
							"response": []
						},
						{
							"name": "[CT003]Validar cadastro com campos em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3b675d4-bcc6-4c32-a01d-225d310ddcd1",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"nome não pode ficar em branco\");\r",
											"    pm.expect(pm.response.text()).to.include(\"preco deve ser um número\");\r",
											"    pm.expect(pm.response.text()).to.include(\"descricao não pode ficar em branco\");\r",
											"    pm.expect(pm.response.text()).to.include(\"quantidade deve ser um número\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "38743887-2bef-4a56-9d57-5e018b35a314",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlQHFhMDEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZXFhMTIzNCIsImlhdCI6MTc1NjU5NTY0NCwiZXhwIjoxNzU2NTk2MjQ0fQ.g33Q5oWhU2SeQsClUwZ9LhUoy-Tk6N7C-hhAkDHi6v8"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"\",\r\n    \"preco\": \"\",\r\n    \"descricao\": \"\",\r\n    \"quantidade\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/produtos"
							},
							"response": []
						},
						{
							"name": "[CT004]Validar cadastro com campo Nome em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3b675d4-bcc6-4c32-a01d-225d310ddcd1",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"nome não pode ficar em branco\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "cd1e6f7b-9a8b-44a6-a26b-291c49ac31b7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlQHFhMDEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZXFhMTIzNCIsImlhdCI6MTc1NjU5NTY0NCwiZXhwIjoxNzU2NTk2MjQ0fQ.g33Q5oWhU2SeQsClUwZ9LhUoy-Tk6N7C-hhAkDHi6v8"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"\",\r\n    \"preco\": {{qde_gerada}},\r\n    \"descricao\": \"{{$randomProductMaterial}}\",\r\n    \"quantidade\": {{qde_gerada}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/produtos"
							},
							"response": []
						},
						{
							"name": "[CT005]Validar cadastro com campo Preço em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3b675d4-bcc6-4c32-a01d-225d310ddcd1",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"preco deve ser um número\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "e925f6b2-ddfc-403a-b1ba-d0fcd6e33ec1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlQHFhMDEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZXFhMTIzNCIsImlhdCI6MTc1NjU5NTY0NCwiZXhwIjoxNzU2NTk2MjQ0fQ.g33Q5oWhU2SeQsClUwZ9LhUoy-Tk6N7C-hhAkDHi6v8"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"{{$randomProductName}}\",\r\n    \"preco\": \"\",\r\n    \"descricao\": \"{{$randomProductMaterial}}\",\r\n    \"quantidade\": {{qde_gerada}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/produtos"
							},
							"response": []
						},
						{
							"name": "[CT006]Validar cadastro com campo Descrição em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3b675d4-bcc6-4c32-a01d-225d310ddcd1",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"descricao não pode ficar em branco\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "e997d6a4-5b72-4965-913a-8a80b6d13c53",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlQHFhMDEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZXFhMTIzNCIsImlhdCI6MTc1NjU5NTY0NCwiZXhwIjoxNzU2NTk2MjQ0fQ.g33Q5oWhU2SeQsClUwZ9LhUoy-Tk6N7C-hhAkDHi6v8"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"{{$randomProductName}}\",\r\n    \"preco\": {{qde_gerada}},\r\n    \"descricao\": \"\",\r\n    \"quantidade\": {{qde_gerada}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/produtos"
							},
							"response": []
						},
						{
							"name": "[CT007]Validar cadastro com campo Qde em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3b675d4-bcc6-4c32-a01d-225d310ddcd1",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"quantidade deve ser um número\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "2124478a-9ac6-4c50-a9df-42f8e66ca54e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlQHFhMDEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZXFhMTIzNCIsImlhdCI6MTc1NjU5NTY0NCwiZXhwIjoxNzU2NTk2MjQ0fQ.g33Q5oWhU2SeQsClUwZ9LhUoy-Tk6N7C-hhAkDHi6v8"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"{{$randomProductName}}\",\r\n    \"preco\": {{qde_gerada}},\r\n    \"descricao\": \"{{$randomProductMaterial}}\",\r\n    \"quantidade\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/produtos"
							},
							"response": []
						},
						{
							"name": "[CT008]Validar cadastro de um produto com sucesso",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3b675d4-bcc6-4c32-a01d-225d310ddcd1",
										"exec": [
											"let response = pm.response.json();\r",
											"let id = response._id;\r",
											"pm.globals.set(\"edit_id_product\", id_product);\r",
											"\r",
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "7d82db8b-4fb9-434d-9313-bf1a506d25f5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlQHFhMDEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZXFhMTIzNCIsImlhdCI6MTc1NjU5NTY0NCwiZXhwIjoxNzU2NTk2MjQ0fQ.g33Q5oWhU2SeQsClUwZ9LhUoy-Tk6N7C-hhAkDHi6v8"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"{{$randomProductName}}\",\r\n    \"preco\": \"{{qde_gerada}}\",\r\n    \"descricao\": \"{{$randomProductMaterial}}\",\r\n    \"quantidade\": \"{{qde_gerada}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/produtos"
							},
							"response": []
						},
						{
							"name": "[CT009]Validar produto existente",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3b675d4-bcc6-4c32-a01d-225d310ddcd1",
										"exec": [
											"//RETORNO DO CODIGO E O STATUS\r",
											"pm.test(\"Status code retorna 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"//RETORNO DO RESPONSE\r",
											"pm.test(\"Exibe a msg de alerta\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Já existe produto com esse nome\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "c088cec4-81dd-4589-83b4-4f569c1369b0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlQHFhMDEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZXFhMTIzNCIsImlhdCI6MTc1NjU5NTY0NCwiZXhwIjoxNzU2NTk2MjQ0fQ.g33Q5oWhU2SeQsClUwZ9LhUoy-Tk6N7C-hhAkDHi6v8"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Small Granite Keyboard\",\r\n    \"preco\": 419,\r\n    \"descricao\": \"Fresh\",\r\n    \"quantidade\": 419\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_ServerRest}}/produtos"
							},
							"response": []
						}
					],
					"id": "60fabb72-717c-40af-9cec-fc5b2168f32e",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "18fe55ab-7690-40a4-9a4c-e637fe586212",
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3ee4ff75-6116-4801-87cc-3947c549dd5a",
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Buscar",
					"item": [
						{
							"name": "[CT001]Buscar produto por ID",
							"id": "223092f4-359f-410b-95b7-fc9b0d8550d7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": "{{URL_ServerRest}}/produtos/fKVxggRtJiudPGfF"
							},
							"response": []
						}
					],
					"id": "59477c8b-0572-4a9f-beaf-4edf3ea0898b"
				},
				{
					"name": "Excluir",
					"item": [],
					"id": "ee76a526-4c41-49f3-a81f-f3567cb7a4f1"
				},
				{
					"name": "Editar",
					"item": [],
					"id": "4721c670-a624-4a7a-994c-80dabd803a19"
				}
			],
			"id": "82605781-27a2-4341-a8de-a561aa68681a",
			"description": "**Swagger**: [https://serverest.dev/#/Produtos](https://serverest.dev/#/Produtos)\n\n**Requisição**: GET / POST / DELETE / PUT\n\n**Descrição**: Consulte produtos cadastrados ou, como administrador, gerencie os produtos da loja.",
			"auth": {
				"type": "bearer",
				"bearer": {
					"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlQHFhMDEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZXFhMTIzNCIsImlhdCI6MTc1Njc3MDg0MSwiZXhwIjoxNzU2NzcxNDQxfQ.N8pE8G-IHbuOVUzHKDb-uoor6Oc5M5chMrmvUH43AYU"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "04b2af3f-eb93-439b-9e5b-a469ae607c02",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1349933d-4e77-4ea2-8a52-e5fdea3c6aa1",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Carrinho",
			"item": [
				{
					"name": "Cadastrar",
					"item": [
						{
							"name": "New Request",
							"id": "6d2de81f-e2d3-4d6b-8a98-993483c87b80",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						}
					],
					"id": "77528057-eedb-47fc-8308-db671077067c"
				},
				{
					"name": "Buscar",
					"item": [],
					"id": "5b019dcf-018b-437d-b7ae-093eb7bd1746"
				},
				{
					"name": "Excluir",
					"item": [],
					"id": "81693482-b4f9-4559-bd84-67243a9aace5"
				}
			],
			"id": "f2de5741-ccdc-46d1-bbcf-aeb8e1000afd"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "2a3bdd00-f036-4131-aae0-fe968a19056a",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"//=================NAME=================\r",
					"// Lista de nomes aleatórios\r",
					"const names = [\"Lucas\", \"Ana\", \"Carlos\", \"Mariana\", \"João\", \"Isabela\", \"Pedro\", \"Lívia\", \"Felipe\", \"Rafaela\"];\r",
					"\r",
					"// Função para escolher um nome aleatório da lista\r",
					"function getRandomName() {\r",
					"    const index = Math.floor(Math.random() * names.length);\r",
					"    return names[index];\r",
					"}\r",
					"\r",
					"// Define a variável 'name' no ambiente\r",
					"pm.environment.set(\"name\", getRandomName());\r",
					"\r",
					"\r",
					"\r",
					"//=================NOME PRODUTO=================\r",
					"// Lista de nomes aleatórios\r",
					"const produtcs = [\"Maça\", \"Desinfetante\", \"Esponja de aço\", \"Cafe\", \"Feijao\", \"Arroz\", \"Macarrao\", \"Vassoura\", \"Dedtergente\", \"Sabonete\"];\r",
					"\r",
					"// Função para escolher um nome aleatório da lista\r",
					"function getRandomProducts() {\r",
					"    const index = Math.floor(Math.random() * products.length);\r",
					"    return products[index];\r",
					"}\r",
					"\r",
					"// Define a variável 'name' no ambiente\r",
					"pm.environment.set(\"products\", getRandomName());\r",
					"\r",
					"\r",
					"\r",
					"//=================EMAIL=================\r",
					"const domains = [\"example.com\", \"mail.com\", \"test.com\", \"fakeemail.com\"];\r",
					"\r",
					"// Função para gerar email aleatório com nome + número + domínio\r",
					"function getRandomEmail(name) {\r",
					"    const randomNum = Math.floor(Math.random() * 1000); // número de 0 a 999\r",
					"    const domain = domains[Math.floor(Math.random() * domains.length)];\r",
					"    return `${name.toLowerCase()}${randomNum}@${domain}`;\r",
					"}\r",
					"\r",
					"// Gerar e armazenar as variáveis\r",
					"const name = getRandomName();\r",
					"const email = getRandomEmail(name);\r",
					"\r",
					"pm.environment.set(\"name\", name);\r",
					"pm.environment.set(\"email\", email);\r",
					"\r",
					"\r",
					"\r",
					"//=================STATUS=================\r",
					"//RETONAR ACTIVE OU INACTIVE NO CAMPO STATUS\r",
					"function randomBoolean() {\r",
					"    return Math.random() < 0.5;\r",
					"}\r",
					"let status = randomBoolean() ? \"active\" : \"inactive\";\r",
					"pm.environment.set(\"status\", status);\r",
					"\r",
					"\r",
					"\r",
					"//=================GENDER=================\r",
					"//RETONAR MALE OU FEMALE NO CAMPO GENDER\r",
					"function randomBoolean() {\r",
					"    return Math.random() < 0.5;\r",
					"}\r",
					"let sexo = randomBoolean() ? \"male\" : \"female\";\r",
					"pm.environment.set(\"gender\", sexo);\r",
					"\r",
					"\r",
					"//=================SENHA=================\r",
					"//RETONAR SENHA COM 6 CARACTERES\r",
					"// Gera senha aleatória de 6 caracteres\r",
					"function generatePassword(length) {\r",
					"    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*';\r",
					"    let password = '';\r",
					"    for (let i = 0; i < length; i++) {\r",
					"        password += chars.charAt(Math.floor(Math.random() * chars.length));\r",
					"    }\r",
					"    return password;\r",
					"}\r",
					"let senha = generatePassword(6);                //GERA A VARIAVEL NO POSTMAN\r",
					"pm.environment.set(\"senha_gerada\", senha);      //ARMAZENA EM VARIÁVEL DO POSTMAN\r",
					"\r",
					"\r",
					"//=================PREÇO=================\r",
					"// Gera preços aleatória de 3 caracteres\r",
					"function generateQde(length) {\r",
					"    const chars = '0123456789';\r",
					"    let quantidade = '';\r",
					"    for (let i = 0; i < length; i++) {\r",
					"        quantidade += chars.charAt(Math.floor(Math.random() * chars.length));\r",
					"    }\r",
					"    return quantidade;\r",
					"}\r",
					"let qde = generateQde(3);                //GERA A VARIAVEL NO POSTMAN\r",
					"pm.environment.set(\"qde_gerada\", qde);     //ARMAZENA EM VARIÁVEL DO POSTMAN"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "b940936d-bb83-4377-a157-dc4895a60aa4",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"//TEMPO DE RESPOSTA\r",
					"pm.test(\"Tempo de resposta deve ser <2seg\", function () {\r",
					"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
					"});"
				]
			}
		}
	]
}