{
	"info": {
		"_postman_id": "3c8b85b8-c791-4214-a458-338b0b59c66e",
		"name": "Fake Rest API Web",
		"description": "Swagger: [https://fakerestapi.azurewebsites.net/index.html](https://fakerestapi.azurewebsites.net/index.html)\n\nValidar contrato: [https://www.liquid-technologies.com/online-json-to-schema-converter](https://www.liquid-technologies.com/online-json-to-schema-converter)\n\nAPI para criação de livros e autores\n\nBiblioteca Chai: [https://www.chaijs.com/api/bdd/](https://www.chaijs.com/api/bdd/)\n\nBiblioteca ajv: [https://ajv.js.org/json-schema.html#draft-07](https://ajv.js.org/json-schema.html#draft-07)",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Activities",
			"item": [
				{
					"name": "✅Criar atividade",
					"item": [
						{
							"name": "[CT001]Cadastrar atividade com sucesso",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2af0e798-870a-44e8-87cd-e29b5dd6376c",
										"exec": [
											"pm.environment.unset(\"schema\")\r",
											"pm.environment.set(\"schema\", {\r",
											"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"dueDate\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"completed\": {\r",
											"      \"type\": \"boolean\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\",\r",
											"    \"title\",\r",
											"    \"dueDate\",\r",
											"    \"completed\"\r",
											"  ]\r",
											"}\r",
											")"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "73db6bdf-a87f-483b-bd97-b2e43a8cabbb",
										"exec": [
											"//Validar o retorno do status code\r",
											"pm.test(\"V01- Validar o retorno do status code 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\")\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar o tempo de resposta\r",
											"pm.test(\"V02- Validar o tempo de resposta de 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar se o retorno é um array de objetos\r",
											"pm.test(\"V03- Validiar se retorno é um array de objetos\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object');\r",
											"})\r",
											"//=======================================================================\r",
											"//Validar o contrato\r",
											"const Ajv = require(\"ajv\")\r",
											"const ajv = new Ajv({allErrors: true, verbose: true});\r",
											"\r",
											"pm.test('V04- Validar o schema do contrato', function () {\r",
											"    pm.expect(ajv.validate(pm.environment.get('schema'), pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;\r",
											"});\r",
											"\r",
											"//Capturar id\r",
											"pm.test(\"V05- Validar o ID da resposta\", function () {\r",
											"    pm.expect(pm.response.json().id).to.be.eql(pm.response.json().id);\r",
											"    pm.environment.unset(\"activitiesID\");\r",
											"    pm.environment.unset(\"activitiesTitle\");\r",
											"    pm.environment.unset(\"activitiesDueDate\");\r",
											"    pm.environment.unset(\"activitiesCompleted\");\r",
											"    pm.environment.set(\"activitiesID\", pm.response.json().id);\r",
											"    pm.environment.set(\"activitiesTitle\", pm.response.json().title);\r",
											"    pm.environment.set(\"activitiesDueDate\", pm.response.json().dueDate);\r",
											"    pm.environment.set(\"activitiesCompleted\", pm.response.json().completed);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"id": "f0648e61-3718-4658-9ee8-91556d7bc1f5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": {{$randomInt}},\r\n  \"title\": \"{{$randomAdjective}}\",\r\n  \"dueDate\": \"{{dataAtual}}\",\r\n  \"completed\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseURL}}{{version}}/Activities"
							},
							"response": []
						},
						{
							"name": "[CT002]Cadastrar atividade com campos em branco",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2af0e798-870a-44e8-87cd-e29b5dd6376c",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "73db6bdf-a87f-483b-bd97-b2e43a8cabbb",
										"exec": [
											"//Validar o retorno do status code\r",
											"pm.test(\"V01- Validar o retorno do status code 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar o tempo de resposta\r",
											"pm.test(\"V02- Validar o tempo de resposta de 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar se o retorno é um array de objetos\r",
											"pm.test(\"V03- Validiar se retorno é um array de objetos\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object');\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"id": "1b21faca-9027-44a3-a895-ae3524fd6514",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"\",\r\n  \"title\": \"\",\r\n  \"dueDate\": \"\",\r\n  \"completed\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseURL}}{{version}}/Activities"
							},
							"response": []
						},
						{
							"name": "[CT003]Cadastrar atividade com campo completed em branco",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2af0e798-870a-44e8-87cd-e29b5dd6376c",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "73db6bdf-a87f-483b-bd97-b2e43a8cabbb",
										"exec": [
											"//Validar o retorno do status code\r",
											"pm.test(\"V01- Validar o retorno do status code 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar o tempo de resposta\r",
											"pm.test(\"V02- Validar o tempo de resposta de 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar se o retorno é um array de objetos\r",
											"pm.test(\"V03- Validiar se retorno é um array de objetos\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object');\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"id": "cc85c47b-0d80-4634-9a18-92cf2d57bacf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"{{$randomInt}}\",\r\n  \"title\": \"{{$randomAdjective}}\",\r\n  \"dueDate\": \"{{dataAtual}}\",\r\n  \"completed\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseURL}}{{version}}/Activities"
							},
							"response": []
						},
						{
							"name": "[CT004]Cadastrar atividade com campo dueDate em branco",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2af0e798-870a-44e8-87cd-e29b5dd6376c",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "73db6bdf-a87f-483b-bd97-b2e43a8cabbb",
										"exec": [
											"//Validar o retorno do status code\r",
											"pm.test(\"V01- Validar o retorno do status code 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar o tempo de resposta\r",
											"pm.test(\"V02- Validar o tempo de resposta de 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar se o retorno é um array de objetos\r",
											"pm.test(\"V03- Validiar se retorno é um array de objetos\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object');\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"id": "f54fd280-1298-41c0-939b-17702fa4115c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"{{$randomInt}}\",\r\n  \"title\": \"{{$randomAdjective}}\",\r\n  \"dueDate\": \"\",\r\n  \"completed\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseURL}}{{version}}/Activities"
							},
							"response": []
						},
						{
							"name": "[CT005]Cadastrar atividade com campo title em branco",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2af0e798-870a-44e8-87cd-e29b5dd6376c",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "73db6bdf-a87f-483b-bd97-b2e43a8cabbb",
										"exec": [
											"//Validar o retorno do status code\r",
											"pm.test(\"V01- Validar o retorno do status code 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar o tempo de resposta\r",
											"pm.test(\"V02- Validar o tempo de resposta de 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar se o retorno é um array de objetos\r",
											"pm.test(\"V03- Validiar se retorno é um array de objetos\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object');\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"id": "00d991be-9270-46c3-a5ba-878287e87a68",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"{{$randomInt}}\",\r\n  \"title\": \"\",\r\n  \"dueDate\": \"{{dataAtual}}\",\r\n  \"completed\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseURL}}{{version}}/Activities"
							},
							"response": []
						},
						{
							"name": "[CT006]Cadastrar atividade com campo id em branco",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2af0e798-870a-44e8-87cd-e29b5dd6376c",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "73db6bdf-a87f-483b-bd97-b2e43a8cabbb",
										"exec": [
											"//Validar o retorno do status code\r",
											"pm.test(\"V01- Validar o retorno do status code 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar o tempo de resposta\r",
											"pm.test(\"V02- Validar o tempo de resposta de 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar se o retorno é um array de objetos\r",
											"pm.test(\"V03- Validiar se retorno é um array de objetos\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object');\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"id": "aa6c59d7-1423-4bd1-bab0-6fc5f96abcee",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"\",\r\n  \"title\": \"{{$randomAdjective}}\",\r\n  \"dueDate\": \"{{dataAtual}}\",\r\n  \"completed\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseURL}}{{version}}/Activities"
							},
							"response": []
						},
						{
							"name": "[CT007]Cadastrar atividade com data futura",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2af0e798-870a-44e8-87cd-e29b5dd6376c",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "73db6bdf-a87f-483b-bd97-b2e43a8cabbb",
										"exec": [
											"//Validar o retorno do status code\r",
											"pm.test(\"V01- Validar o retorno do status code 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar o tempo de resposta\r",
											"pm.test(\"V02- Validar o tempo de resposta de 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar se o retorno é um array de objetos\r",
											"pm.test(\"V03- Validiar se retorno é um array de objetos\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object');\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"id": "2abd7030-92a4-4bbc-9bf0-19119397d396",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"{{$randomInt}}\",\r\n  \"title\": \"{{$randomAdjective}}\",\r\n  \"dueDate\": \"{{dataFutura}}\",\r\n  \"completed\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseURL}}{{version}}/Activities"
							},
							"response": []
						},
						{
							"name": "[CT0088]Cadastrar atividade com data passada",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2af0e798-870a-44e8-87cd-e29b5dd6376c",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "73db6bdf-a87f-483b-bd97-b2e43a8cabbb",
										"exec": [
											"//Validar o retorno do status code\r",
											"pm.test(\"V01- Validar o retorno do status code 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar o tempo de resposta\r",
											"pm.test(\"V02- Validar o tempo de resposta de 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar se o retorno é um array de objetos\r",
											"pm.test(\"V03- Validiar se retorno é um array de objetos\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object');\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"id": "9db9bc0a-4cf5-49bb-8454-8cee5c010cdf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"{{$randomInt}}\",\r\n  \"title\": \"{{$randomAdjective}}\",\r\n  \"dueDate\": \"{{dataHistorica}}\",\r\n  \"completed\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseURL}}{{version}}/Activities"
							},
							"response": []
						}
					],
					"id": "cbe199ca-5d2a-4ba9-83ea-a2f5773a98b5",
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "23906546-c03e-4ef9-9bc6-834ef4459307",
								"type": "text/javascript",
								"packages": {},
								"requests": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b004acd3-32a0-431d-93c3-75493f26ced9",
								"type": "text/javascript",
								"packages": {},
								"requests": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "✅Buscar atividade",
					"item": [
						{
							"name": "[CT001]Buscar por todas as atividades",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "506e8f08-11a5-4e1f-bc9d-d9152c74ba6c",
										"exec": [
											"pm.environment.unset(\"schema\")\r",
											"pm.environment.set(\"schema\", {\r",
											"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"array\",\r",
											"  \"items\": [\r",
											"    {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"title\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"dueDate\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"completed\": {\r",
											"          \"type\": \"boolean\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\",\r",
											"        \"title\",\r",
											"        \"dueDate\",\r",
											"        \"completed\"\r",
											"      ]\r",
											"    }\r",
											"  ]\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "74bf1fd7-f050-4761-a17f-546b279b7f2b",
										"exec": [
											"//Validar o retorno do status code\r",
											"pm.test(\"V01- Validar o retorno do status code 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\")\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar o tempo de resposta\r",
											"pm.test(\"V02- Validar o tempo de resposta de 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar se o retorno é um array de objetos\r",
											"pm.test(\"V03- Validiar se retorno é um array de objetos\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('array');\r",
											"})\r",
											"//=======================================================================\r",
											"//Validar o contrato\r",
											"const Ajv = require(\"ajv\")\r",
											"const ajv = new Ajv({allErrors: true, verbose: true});\r",
											"\r",
											"pm.test('V04- Validar o schema do contrato', function () {\r",
											"    pm.expect(ajv.validate(pm.environment.get('schema'), pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;\r",
											"});\r",
											"\r",
											"//Capturar id\r",
											"pm.test(\"V05- Capturar id\", function () {\r",
											"    var id = pm.response.json();\r",
											"    console.log(id[3].id);\r",
											"    pm.environment.set(\"activitiesID\", id[3].id);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"id": "c9206d2e-7911-4c9f-81ac-2d127a43e8b6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseURL}}{{version}}/Activities"
							},
							"response": []
						},
						{
							"name": "[CT002]Buscar atividade por ID existente",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5582f804-1c82-403d-8057-b05f9baa0b81",
										"exec": [
											"pm.environment.unset(\"schema\")\r",
											"pm.environment.set(\"schema\", {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"dueDate\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"completed\": {\r",
											"      \"type\": \"boolean\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\",\r",
											"    \"title\",\r",
											"    \"dueDate\",\r",
											"    \"completed\"\r",
											"  ]\r",
											"}\r",
											")"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "adc29617-7d5e-4bbe-a05f-971cd77a9c61",
										"exec": [
											"//Validar o retorno do status code\r",
											"pm.test(\"V01- Validar o retorno do status code 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\")\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar o tempo de resposta\r",
											"pm.test(\"V02- Validar o tempo de resposta de 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar se o retorno é um array de objetos\r",
											"pm.test(\"V03- Validiar se retorno é um array de objetos\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object');\r",
											"})\r",
											"//=======================================================================\r",
											"//Validar o contrato\r",
											"const Ajv = require(\"ajv\")\r",
											"const ajv = new Ajv({allErrors: true, verbose: true});\r",
											"\r",
											"pm.test('V04- Validar o schema do contrato', function () {\r",
											"    pm.expect(ajv.validate(pm.environment.get('schema'), pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"id": "f7cd5cae-f422-438f-b4f5-aefa5037f18f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": "{{baseURL}}{{version}}/Activities/{{activitiesID}}"
							},
							"response": []
						},
						{
							"name": "[CT003]Buscar atividade por ID inexistente",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5582f804-1c82-403d-8057-b05f9baa0b81",
										"exec": [
											"pm.environment.unset(\"schema\")\r",
											"pm.environment.set(\"schema\", {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"type\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"status\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"traceId\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"type\",\r",
											"    \"title\",\r",
											"    \"status\",\r",
											"    \"traceId\"\r",
											"  ]\r",
											"}\r",
											")"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "adc29617-7d5e-4bbe-a05f-971cd77a9c61",
										"exec": [
											"//Validar o retorno do status code\r",
											"pm.test(\"V01- Validar o retorno do status code 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"    pm.response.to.have.status(\"Not Found\")\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar o tempo de resposta\r",
											"pm.test(\"V02- Validar o tempo de resposta de 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar se o retorno é um array de objetos\r",
											"pm.test(\"V03- Validiar se retorno é um array de objetos\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object');\r",
											"})\r",
											"//=======================================================================\r",
											"//Validar o contrato\r",
											"const Ajv = require(\"ajv\")\r",
											"const ajv = new Ajv({allErrors: true, verbose: true});\r",
											"\r",
											"pm.test('V04- Validar o schema do contrato', function () {\r",
											"    pm.expect(ajv.validate(pm.environment.get('schema'), pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"id": "9e224ec5-f954-4b45-8910-73e060b29491",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": "{{baseURL}}{{version}}/Activities/100"
							},
							"response": []
						}
					],
					"id": "ede7a609-3b4f-4c5d-8e95-e1727732b383"
				},
				{
					"name": "Atualizar atividade",
					"item": [
						{
							"name": "[CT001]Atualizar todos os campos com sucesso",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3b54bfc0-3a8b-4eb2-a61b-abb14b3d9e37",
										"exec": [
											"pm.environment.unset(\"schema\")\r",
											"pm.environment.set(\"schema\", {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"dueDate\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"completed\": {\r",
											"      \"type\": \"boolean\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\",\r",
											"    \"title\",\r",
											"    \"dueDate\",\r",
											"    \"completed\"\r",
											"  ]\r",
											"}\r",
											")"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "02229118-29a8-49e7-89cd-af06243c9f4a",
										"exec": [
											"//Validar o retorno do status code\r",
											"pm.test(\"V01- Validar o retorno do status code 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\")\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar o tempo de resposta\r",
											"pm.test(\"V02- Validar o tempo de resposta de 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar se o retorno é um array de objetos\r",
											"pm.test(\"V03- Validiar se retorno é um array de objetos\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object');\r",
											"})\r",
											"//=======================================================================\r",
											"//Validar o contrato\r",
											"const Ajv = require(\"ajv\")\r",
											"const ajv = new Ajv({allErrors: true, verbose: true});\r",
											"\r",
											"pm.test('V04- Validar o schema do contrato', function () {\r",
											"    pm.expect(ajv.validate(pm.environment.get('schema'), pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;\r",
											"});\r",
											"\r",
											"//Capturar id\r",
											"pm.test(\"V05- Validar o ID da resposta\", function () {\r",
											"    pm.expect(pm.response.json().id).to.be.eql(pm.response.json().id);\r",
											"    pm.environment.unset(\"activitiesID\");\r",
											"    pm.environment.set(\"activitiesID\", pm.response.json().id);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"id": "33b4a3bb-6f4d-4a87-8288-0168c75d2fe9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{activitiesID}},\r\n    \"title\": \"{{$randomAdjective}}\",\r\n    \"dueDate\": \"{{dataAtual}}\",\r\n    \"completed\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseURL}}{{version}}/Activities/{{activitiesID}}"
							},
							"response": []
						},
						{
							"name": "[CT002]Atualizar o campo Title",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3b54bfc0-3a8b-4eb2-a61b-abb14b3d9e37",
										"exec": [
											"pm.environment.unset(\"schema\")\r",
											"pm.environment.set(\"schema\", {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"dueDate\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"completed\": {\r",
											"      \"type\": \"boolean\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\",\r",
											"    \"title\",\r",
											"    \"dueDate\",\r",
											"    \"completed\"\r",
											"  ]\r",
											"}\r",
											")"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "02229118-29a8-49e7-89cd-af06243c9f4a",
										"exec": [
											"//Validar o retorno do status code\r",
											"pm.test(\"V01- Validar o retorno do status code 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\")\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar o tempo de resposta\r",
											"pm.test(\"V02- Validar o tempo de resposta de 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"//=======================================================================\r",
											"//Validar se o retorno é um array de objetos\r",
											"pm.test(\"V03- Validiar se retorno é um array de objetos\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object');\r",
											"})\r",
											"//=======================================================================\r",
											"//Validar o contrato\r",
											"const Ajv = require(\"ajv\")\r",
											"const ajv = new Ajv({allErrors: true, verbose: true});\r",
											"\r",
											"pm.test('V04- Validar o schema do contrato', function () {\r",
											"    pm.expect(ajv.validate(pm.environment.get('schema'), pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;\r",
											"});\r",
											"\r",
											"//Validar o id, data e completed\r",
											"pm.test(\"V05- Validar o ID da resposta\", function () {\r",
											"    pm.expect(pm.response.json().id).to.be.eql(\"{{activitiesID}}\");\r",
											"    pm.expect(pm.response.json().id).to.be.eql(\"{{activitiesDueDate}}\");\r",
											"    pm.expect(pm.response.json().id).to.be.eql(\"{{activitiesCompleted}}\");\r",
											"});\r",
											"\r",
											"//Validar o Title\r",
											"pm.test(\"V06- Validar alteração do Title da resposta\", function () {\r",
											"    pm.expect(pm.response.json().title).to.be.not.eql(\"{{activitiesTitle}}\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"id": "e593bf0d-6e6f-4303-9ed0-a46c745acbac",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{activitiesID}},\r\n    \"title\": \"{{$randomAdjective}}\",\r\n    \"dueDate\": \"{{activitiesDueDate}}\",\r\n    \"completed\": {{activitiesCompleted}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseURL}}{{version}}/Activities/{{activitiesID}}"
							},
							"response": []
						}
					],
					"id": "0a92d32e-2f13-440b-ba05-88c750045f55"
				},
				{
					"name": "Excluir atividade",
					"item": [],
					"id": "8c0d806f-c27b-41a2-9e19-cb7378021ea3"
				}
			],
			"id": "a0eefc3a-dbd9-4f4e-a43c-9ada33aa44d6",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "176a46d6-6dd4-4a3b-a574-4bac02850b54",
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d7535eb0-1e96-43f9-9144-56e7f2c96184",
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Authors",
			"item": [
				{
					"name": "Criar autor",
					"item": [
						{
							"name": "Cadastrar Atividade",
							"id": "c45a0857-a6b1-488d-98c9-2cdc8245395e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 100,\r\n  \"title\": \"Teste API Autor\",\r\n  \"dueDate\": \"2025-06-07T18:29:02.926Z\",\r\n  \"completed\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_Fake_Rest_API}}/Activities"
							},
							"response": []
						}
					],
					"id": "8cae7fb5-7f2b-4374-b5c4-0c8a8b0fff37"
				},
				{
					"name": "Buscar autor",
					"item": [
						{
							"name": "Buscar Atividade",
							"id": "3a4f165f-3fb5-4e05-bc53-06a5aae7b2a1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_Fake_Rest_API}}/Authors"
							},
							"response": []
						},
						{
							"name": "Buscar Atividade por ID",
							"id": "db79d366-4cff-4eed-af82-6840f4e41cd1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": "{{URL_Fake_Rest_API}}/Activities/1"
							},
							"response": []
						}
					],
					"id": "31862fa1-877f-40a4-a3f8-13a1ad70607c"
				},
				{
					"name": "Atualizar autor",
					"item": [],
					"id": "b3fb9f64-9370-4ace-96ee-ed87b396b2b5"
				},
				{
					"name": "Excluir autor",
					"item": [],
					"id": "ff9c86f2-a518-4796-ba6d-d38f5ac74385"
				}
			],
			"id": "989b59f3-3e61-476e-ac0d-1c22170b9d27"
		},
		{
			"name": "Books",
			"item": [
				{
					"name": "Cadastrar livros",
					"item": [
						{
							"name": "Cadastrar Atividade",
							"id": "d540c115-1197-4c0e-bf68-dce0d056c09f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 100,\r\n  \"title\": \"Teste API Autor\",\r\n  \"dueDate\": \"2025-06-07T18:29:02.926Z\",\r\n  \"completed\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_Fake_Rest_API}}/Activities"
							},
							"response": []
						}
					],
					"id": "838d9c11-f5d0-4f3f-9bfc-d72df65767d1"
				},
				{
					"name": "Buscar livros",
					"item": [
						{
							"name": "Buscar Atividade",
							"id": "300a0290-5daf-471d-a9d3-bd7f9c5a85d6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_Fake_Rest_API}}/Authors"
							},
							"response": []
						},
						{
							"name": "Buscar Atividade por ID",
							"id": "019a4d17-e84a-40d0-83db-3b40c5db37b2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": "{{URL_Fake_Rest_API}}/Activities/1"
							},
							"response": []
						}
					],
					"id": "ca6f3371-bc04-4404-ab43-4897b01fed22"
				},
				{
					"name": "Atualizar livros",
					"item": [],
					"id": "dbc189fa-fc72-4b8e-878f-347a77736803"
				},
				{
					"name": "Excluir livros",
					"item": [],
					"id": "3b7ce90c-6c31-4e26-9af5-d8cbb227aa7a"
				}
			],
			"id": "9532dbaf-eb69-4f51-8dfc-34e6133ae7be"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Cadastrar usuario",
					"item": [
						{
							"name": "Cadastrar Atividade",
							"id": "99d94362-fcf8-4ffa-a327-978d877caaca",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 100,\r\n  \"title\": \"Teste API Autor\",\r\n  \"dueDate\": \"2025-06-07T18:29:02.926Z\",\r\n  \"completed\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_Fake_Rest_API}}/Activities"
							},
							"response": []
						}
					],
					"id": "9e92d72b-fbc9-4e76-8140-232a3928db7d"
				},
				{
					"name": "Buscar usuario",
					"item": [
						{
							"name": "Buscar Atividade",
							"id": "d215f7f3-5559-47b7-8046-81a7a19b1e0f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_Fake_Rest_API}}/Authors"
							},
							"response": []
						},
						{
							"name": "Buscar Atividade por ID",
							"id": "31cc2e63-1543-45ad-b0de-ee09762d3333",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": "{{URL_Fake_Rest_API}}/Activities/1"
							},
							"response": []
						}
					],
					"id": "1df45ac5-2c7c-434f-9418-ae1d963cd40f"
				},
				{
					"name": "Atualizar usuario",
					"item": [],
					"id": "aeee9acc-f7f2-4e22-9f7e-57f945e75035"
				},
				{
					"name": "Excluir usuario",
					"item": [],
					"id": "7fe80523-199a-4b80-9f71-27d646dc06b9"
				}
			],
			"id": "aedb4c52-8990-43ad-b73e-b713bd119742"
		},
		{
			"name": "CoverPhotos",
			"item": [
				{
					"name": "Cadastrar foto da capa",
					"item": [
						{
							"name": "Cadastrar Atividade",
							"id": "63acb103-2bc5-48c5-b802-d4723e0a889c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 100,\r\n  \"title\": \"Teste API Autor\",\r\n  \"dueDate\": \"2025-06-07T18:29:02.926Z\",\r\n  \"completed\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_Fake_Rest_API}}/Activities"
							},
							"response": []
						}
					],
					"id": "5abb270c-f536-4f91-9017-a06a8e21bfdc"
				},
				{
					"name": "Buscar foto da capa",
					"item": [
						{
							"name": "Buscar Atividade",
							"id": "01c8fead-5b4e-4cf1-8033-fb7f3cb1aa58",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{URL_Fake_Rest_API}}/Authors"
							},
							"response": []
						},
						{
							"name": "Buscar Atividade por ID",
							"id": "d4ce9683-ce54-4d03-a845-f148d48983e7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": "{{URL_Fake_Rest_API}}/Activities/1"
							},
							"response": []
						}
					],
					"id": "5fd1128b-783f-4cd0-8baf-d8ecb068f964"
				},
				{
					"name": "Atualizar foto da capa",
					"item": [],
					"id": "8b3c74ff-54ee-4169-99d4-725cf4c2cb71"
				},
				{
					"name": "Excluir foto da capa",
					"item": [],
					"id": "f30a5064-5bbc-44c3-bfbf-96bce24990e8"
				}
			],
			"id": "805c901e-5640-4c43-b3b2-2cdb2d164554"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": {}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b1a90bbe-ce62-4051-96c2-59bd08551eb3",
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					"// Função genérica para gerar data no formato AAAA-MM-DD\r",
					"function gerarData(offsetDias = 0) {\r",
					"    let hoje = new Date();\r",
					"    hoje.setDate(hoje.getDate() + offsetDias);                              // +dias para futuro, -dias para passado\r",
					"    let ano = hoje.getFullYear();\r",
					"    let mes = String(hoje.getMonth() + 1).padStart(2, '0');\r",
					"    let dia = String(hoje.getDate()).padStart(2, '0');\r",
					"    return `${ano}-${mes}-${dia}T00:56:52.794Z`;\r",
					"}\r",
					"\r",
					"let dataAtual = gerarData(0);                                               // Data atual\r",
					"let dataFutura = gerarData(7);                                              // Data futura (ex: +7 dias)\r",
					"let dataHistorica = gerarData(-7);                                          // Data passada (ex: -7 dias)\r",
					"\r",
					"pm.environment.set(\"dataAtual\", dataAtual);                                 // Salva na variável local\r",
					"pm.environment.set(\"dataFutura\", dataFutura);\r",
					"pm.environment.set(\"dataHistorica\", dataHistorica);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d7acf2b4-2e19-4a34-9754-64342b3c831a",
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	]
}